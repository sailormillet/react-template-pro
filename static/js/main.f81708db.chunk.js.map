{"version":3,"sources":["router/index.js","reducers/moduleA.js","reducers/index.js","index.js"],"names":["root","exact","path","key","component","lazy","delay","Promise","resolve","setTimeout","slow","initialState","shopping_card","addedList","state","list","action","type","indexOf","productId","cart","combineReducers","moduleA","store","createStore","reducer","applyMiddleware","thunk","routeKey","supportsHistory","window","history","ReactDOM","render","basename","forceRefresh","maxDuration","fallback","map","item","includes","Error","push","document","getElementById"],"mappings":"2MASaA,G,MAAO,CAClB,CACEC,OAAO,EACPC,KAAM,IACNC,IAAK,OACLC,UAAWC,gBAAK,kBAZP,SAACD,GAA6B,IAAlBE,EAAiB,uDAAT,IAC/B,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACT,OAAOD,EAAQJ,KACdE,MAQmBI,CAAK,kCAE7B,CACET,OAAO,EACPC,KAAM,WACNC,IAAK,UACLC,UAAWC,gBAAK,kBAAM,iCAExB,CACEJ,OAAO,EACPC,KAAM,MACNC,IAAK,KACLC,UAAWC,gBAAK,kBAAM,iCAExB,CACEF,IAAK,MACLC,UAAWC,gBAAK,kBAAM,mC,QC5BpBM,EAAe,CACnBC,cAAe,IAEXC,EAAY,WAAwC,IAAvCC,EAAsC,uDAA9BH,EAAaI,KAAMC,EAAW,uCACvD,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAyC,IAArCH,EAAMI,QAAQF,EAAOG,WAChBL,EAEH,GAAN,mBAAWA,GAAX,CAAkBE,EAAOG,YAC3B,QACE,OAAOL,IAeEM,EAVF,WAAmC,IAAlCN,EAAiC,uDAAzBH,EAAcK,EAAW,uCAKzC,OAJIA,EAAOC,KAIJ,CACLJ,UAAWA,EAAUC,EAAMD,UAAWG,KCnB/BK,cAAgB,CAAEC,Y,OCM3BC,EAAQC,YAAYC,EAASC,YAAgBC,MAC7CC,EAAW,GAQXC,EAAkB,cAAeC,OAAOC,QAE9CC,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAQW,SAAS,sBAAsBC,cAAeN,EAAtD,SACE,cAAC,WAAD,CAAUO,YAAa,IAAKC,SAAU,6CAAtC,SACE,cAAC,IAAD,UACGrC,EAAKsC,KAAI,SAACC,GACT,GAAIA,EAAKpC,IAAK,CACZ,GAAIyB,EAASY,SAASD,EAAKpC,KACzB,MAAM,IAAIsC,MAAJ,qBAAwBF,EAAKpC,IAA7B,qDAENyB,EAASc,KAAKH,EAAKpC,KAGvB,OAAO,cAAC,IAAD,CAAOF,MAAOsC,EAAKtC,MAAOC,KAAMqC,EAAKrC,KAAqBE,UAAWmC,EAAKnC,WAA1BmC,EAAKpC,gBAMtEwC,SAASC,eAAe,W","file":"static/js/main.f81708db.chunk.js","sourcesContent":["import { lazy } from \"react\";\n\nconst slow = (component, delay = 1000) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      return resolve(component);\n    }, delay);\n  });\n};\nexport const root = [\n  {\n    exact: true,\n    path: \"/\",\n    key: \"home\",\n    component: lazy(() => slow(import(\"@pages/home\"))),\n  },\n  {\n    exact: true,\n    path: \"/product\",\n    key: \"product\",\n    component: lazy(() => import(\"@pages/product\")),\n  },\n  {\n    exact: true,\n    path: \"/my\",\n    key: \"my\",\n    component: lazy(() => import(\"@pages/userCenter\")),\n  },\n  {\n    key: \"404\",\n    component: lazy(() => import(\"@pages/notFound\")),\n  },\n];\n","// import { ADD_TO_MODULEA } from \"@constant/actionTypes\";\n\nconst initialState = {\n  shopping_card: [],\n};\nconst addedList = (state = initialState.list, action) => {\n  switch (action.type) {\n    case \"ADD_TO_MODULEA\":\n      if (state.indexOf(action.productId) !== -1) {\n        return state;\n      }\n      return [...state, action.productId];\n    default:\n      return state;\n  }\n};\n\nexport const getAddedList = (state) => state.addedList;\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    // case CHECKOUT_REQUEST:\n    //   return initialState;\n    default:\n      return {\n        addedList: addedList(state.addedList, action),\n      };\n  }\n};\nexport default cart;\n","import { combineReducers } from \"redux\";\nimport moduleA from \"./moduleA\";\n// import moduleB from \"./moduleB\";\n// export const ADD_TO_MODULEA = \"ADD_TO_MODULEA\";\n\nexport default combineReducers({ moduleA });\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./index.scss\";\nimport { root } from \"@router\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nconst routeKey = [];\n// function sendToAnalytics(metric) {\n//   // console.log(metric);\n//   // const body = JSON.stringify(metric);\n//   // Use `navigator.sendBeacon()` if available, falling back to `fetch()`.\n//   // (navigator.sendBeacon && navigator.sendBeacon('/analytics', body)) ||\n//   //     fetch('/analytics', {body, method: 'POST', keepalive: true});\n// }\nconst supportsHistory = \"pushState\" in window.history;\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/react-template-pro\" forceRefresh={!supportsHistory}>\n      <Suspense maxDuration={500} fallback={<div>Loading...</div>}>\n        <Switch>\n          {root.map((item) => {\n            if (item.key) {\n              if (routeKey.includes(item.key)) {\n                throw new Error(`router key ${item.key}已存在，请换一个`);\n              } else {\n                routeKey.push(item.key);\n              }\n            }\n            return <Route exact={item.exact} path={item.path} key={item.key} component={item.component} />;\n          })}\n        </Switch>\n      </Suspense>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(sendToAnalytics);\n"],"sourceRoot":""}