{
    "env": {
        "amd": true,
        "browser": true,
        "node": true,
        "es6": true
    },
    "parser": "@typescript-eslint/parser",//定义ESLint的解析器,在ts项目中必须执行解析器为@typescript-eslint/parser，才能正确的检测和规范TS代码
    "parserOptions": {        //指定ESLint可以解析JSX语法
        "ecmaVersion": 2021,
        "sourceType": "module",
        "ecmaFeatures":{
            "jsx":true
        }
    },
    "settings": {
      "react": {//自动发现React的版本，从而进行规范react代码
        "pragma": "React",
        "version": "detect"
      },
      "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
      "import/parsers": {
        "@typescript-eslint/parser": [".ts", ".tsx"]
      },
      "import/resolver": {
          // 解决tsconfig下的path别名导致eslint插件无法解决的bug
          "typescript": {
            "alwaysTryTypes": true,// 从 <roo/>@types 读取类型定义
            "directory": "./tsconfig.json"
          },
          "node": {
            "extensions": [".js", ".jsx", ".ts", ".tsx"]
          }
        }
    },
    "plugins": [
        "import",
        "react",
        "react-hooks",
        "prettier",
        "@typescript-eslint",
        "jsx-a11y"
    ],
    "extends": [
      "airbnb",
      "airbnb/hooks",
      "plugin:react/recommended",// Uses the recommended rules from @eslint-plugin-react
      "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:import/typescript",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
      // "react-app/jest",
  ],
    "rules": {
        "import/no-unresolved": "error",
        "prettier/prettier": "error",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "import/prefer-default-export": "off",
        "react/react-in-jsx-scope": "off",
        "react/jsx-filename-extension": [
            1,
            {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ]
            }
        ],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
              "js": "never",
              "jsx": "never",
              "ts": "never",
              "tsx": "never"
            }
         ],
        // 有一些 event 的时候，不需要 role 属性，不需要其他解释
        "jsx-a11y/no-static-element-interactions": 0,
        "jsx-a11y/click-events-have-key-events": 0,
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"]
    }
}
